generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  patient
  nurse
  headdept
}

enum Gender {
  FEMALE
  MALE
}

model User {
  id              String    @id @default(uuid())
  name            String
  email           String?   @unique
  nationalID      String    @unique 
  phone           String?   @unique 
  passwordHash    String
  role            Role
  gender          Gender?
  allergies       Json?     @db.Json
  nursePrograms   Program[] @relation("nursePrograms")
  patientPrograms Program[] @relation("patientPrograms")

  nurseDepartments Department? @relation("NurseToDept", fields: [departmentId], references: [id])
  departmentId     Int?

  headDeptDepartment Department? @relation("HeadDeptDepartment")
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt

  @@index([departmentId])
}

model Program {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name                         String   @unique
  potentialProblems            Json?    @db.Json
  preventionAndTherapies       Json?    @db.Json
  medications                  Json?    @db.Json
  diagnosticTestsAndMonitoring Json?    @db.Json
  duration                     DateTime
  patients                     User[]   @relation("patientPrograms")
  nurses                       User[]   @relation("nursePrograms")
}

model Department {
  id     Int    @id @default(autoincrement())
  name   String @unique
  nurses User[] @relation("NurseToDept") // OneToMany Relationship (Department has many Nurses)

  headDept   User?    @relation("HeadDeptDepartment", fields: [headDeptID], references: [id], onDelete: NoAction, onUpdate: NoAction)
  headDeptID String?  @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([headDeptID])
}

// model Medication {
//   id        Int     @id @default(autoincrement())
//   name      String  @unique
//   dosage    String
//   program   Program @relation(fields: [programId], references: [id])
//   programId Int

//   @@index([programId])
// }

// model Allergy {
//   id          Int    @id @default(autoincrement())
//   name        String @unique
//   sideEffects String
//   users       User[]
// }
