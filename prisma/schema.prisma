generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// Models

model User {
  id   Int      @id @default(autoincrement())
  type UserRole @default(PATIENT)

  patientRelations  Patient?
  nurseRelations    Nurse?
  headDeptRelations headDept?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  nationalID   BigInt  @unique(map: "nationalID") @db.BigInt
  email        String? @unique(map: "UserMail")
  phone        BigInt? @unique(map: "UserPhone") @db.BigInt
  name         String?
  passwordHash String?
}

enum UserRole {
  PATIENT
  NURSE
  HEADDEPT
}

//Users models (unchanged)
model Nurse {
  patients   Patient[] // OneToMany Relationship (Nurse has many Paitents)
  department Department @relation("NurseToDept", fields: [depID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  depID      Int
  isActive   Boolean?   @default(true)
  user       User       @relation(fields: [nurseID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  nurseID    Int        @unique

  @@id([nurseID])
  @@index([depID])
}

model Patient {
  nurse     Nurse @relation(fields: [nurseID], references: [nurseID], onDelete: Cascade, onUpdate: Cascade)
  nurseID   Int
  user      User  @relation(fields: [patientID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  patientID Int   @unique

  @@id([patientID])
  @@index([nurseID])
}

model headDept {
  user       User        @relation(fields: [headDepID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  headDepID  Int         @unique
  department Department?
  depID      Int         @unique

  @@id([headDepID])
  @@index([depID])
}

model Department {
  id         Int       @id @default(autoincrement())
  name       String    @unique(map: "DepartmentName")
  nurses     Nurse[]   @relation("NurseToDept") // OneToMany Relationship (Department has many Nurses)
  headDept   headDept? @relation(fields: [headDeptID], references: [headDepID], onDelete: SetNull)
  headDeptID Int?      @unique
}
