generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// Models

model User {
  id   Int      @id @default(autoincrement())
  role UserRole @default(Patient)

  patient  Patient?
  nurse    Nurse?
  headDept headDept?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  nationalID   BigInt  @unique(map: "nationalID") @db.BigInt
  email        String? @unique(map: "UserMail")
  phone        BigInt? @unique(map: "UserPhone") @db.BigInt
  name         String?
  passwordHash String?
}

enum UserRole {
  Patient
  Nurse
  headDept
}

//Users models (unchanged)
model Nurse {
  patients   Patient[] // OneToMany Relationship (Nurse has many Paitents)
  department Department? @relation(fields: [depID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  depID      Int?
  isActive   Boolean     @default(false)
  user       User        @relation(fields: [userID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userID     Int         @unique

  @@id([userID])
  @@index([depID])
}

model Patient {
  nurse   Nurse? @relation(fields: [nurseID], references: [userID], onDelete: Cascade, onUpdate: Cascade)
  nurseID Int?
  user    User   @relation(fields: [userID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userID  Int    @unique

  @@id([userID])
  @@index([nurseID])
}

model headDept {
  user       User        @relation(fields: [userID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userID     Int         @unique
  department Department?
  depID      Int         @unique

  @@id([userID])
  @@index([depID])
}

model Department {
  id         Int       @id @default(autoincrement())
  name       String    @unique(map: "DepartmentName")
  nurses     Nurse[] // OneToMany Relationship (Department has many Nurses)
  headDept   headDept? @relation(fields: [headDeptID], references: [userID], onDelete: SetNull)
  headDeptID Int?      @unique
}
